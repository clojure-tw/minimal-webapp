#!/opt/local/bin/expect -f
#
# This Expect script was generated by autoexpect on Sun Jul 17 17:14:10 2016
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "\[1m\[7m%\[27m\[1m\[0m                                                                                                                                      \r \r\]2;raxod502@Radon-MBP-New: ~/Desktop/Programming/Clojure/minimal-webapp/test\]1;..l-webapp/test\r\[0m\[27m\[24m\[J\[01;35mtest\[01;33m\[master*\]\[00m \[01;35m% \[00m\[K\[?1h="
send -- "l"
expect -exact "l\[90ms\[39m"
send -- "e"
expect -exact "l\[39me\[90min do clean, cljsbuild once\[39m\[27D"
send -- "i"
expect -exact "\[39mi"
send -- "n"
expect -exact "\[39mn"
send -- " "
expect -exact "\[39m "
send -- "d"
expect -exact "\[39md"
send -- "o"
expect -exact "\[39mo"
send -- " "
expect -exact "\[39m "
send -- "c"
expect -exact "\[39mc"
send -- "l"
expect -exact "\[39ml"
send -- "e"
expect -exact "\[39me"
send -- "a"
expect -exact "\[39ma"
send -- "n"
expect -exact "\[39mn"
send -- ","
expect -exact "\[39m,"
send -- " "
expect -exact "\[39m "
send -- "u"
expect -exact "\[39mu\[90mb\[90me\[90mr\[90mj\[90ma\[90mr\[90m \[90m&\[90m&\[90m \[90mj\[90ma\[90mv\[90ma -jar target/minimal-webapp-standalone.jar\[39m\[56D"
send -- "b"
expect -exact "\[39mb"
send -- "e"
expect -exact "\[39me"
send -- "r"
expect -exact "\[39mr"
send -- "j"
expect -exact "\[39mj"
send -- "a"
expect -exact "\[39ma"
send -- "r"
expect -exact "\[39mr"
send -- "OC"
expect -exact "\[39m \[39m&\[39m&\[39m \[39mj\[39ma\[39mv\[39ma\[39m \[39m-\[39mj\[39ma\[39mr\[39m \[39mt\[39ma\[39mr\[39mg\[39me\[39mt\[39m/\[39mm\[39mi\[39mn\[39mi\[39mm\[39ma\[39ml\[39m-\[39mw\[39me\[39mb\[39ma\[39mp\[39mp\[39m-\[39ms\[39mt\[39ma\[39mn\[39md\[39ma\[39ml\[39mo\[39mn\[39me\[39m.\[39mj\[39ma\[39mr"
send -- " &\r"
expect -exact "\[?1l>\r\r
\]2;lein do clean, uberjar && java -jar target/minimal-webapp-standalone.jar &\]1;leinCompiling minimal-webapp.server\r
2016-07-17 17:15:57.367:INFO::main: Logging initialized @3995ms\r
Compiling ClojureScript...\r
2016-07-17 17:16:04.459:INFO::main: Logging initialized @6768ms\r
Compiling \"resources/public/js/main.js\" from \[\"src\"\]...\r
\[32mSuccessfully compiled \"resources/public/js/main.js\" in 2.337 seconds.\[0m\r
Created /Users/raxod502/Desktop/Programming/Clojure/minimal-webapp/target/minimal-webapp-0.1.0-SNAPSHOT.jar\r
Created /Users/raxod502/Desktop/Programming/Clojure/minimal-webapp/target/minimal-webapp-standalone.jar\r
\[1\] 73064\r
\[1m\[7m%\[27m\[1m\[0m                                                                                                                                      \r \r\]2;raxod502@Radon-MBP-New: ~/Desktop/Programming/Clojure/minimal-webapp/test\]1;..l-webapp/testError: Unable to access jarfile target/minimal-webapp-standalone.jar\r
\[1\]  + 73064 exit 1     java -jar target/minimal-webapp-standalone.jar\r
\r\[0m\[27m\[24m\[J\[01;35mtest\[01;33m\[master*\]\[00m \[01;35m% \[00m\[K\[?1h="
send -- ""
expect eof
